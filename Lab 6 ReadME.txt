
Name: Andrew Lin
Class: EE 104
Demonstration Link: https://youtu.be/6JdRQY8v1Yw
		    https://youtu.be/4DeMfQqK98Q
Reference: https://sjsu.instructure.com/courses/1559910/modules

This project is a Convolutional Neural Network (CNN) baseline model to recognize and learn about objects in the CIFAR-10 dataset. The CNN classifier is built using TensorFlow and Keras.Some features that it has are CNN model with data augmentation, 10 object classes for classification. training and validation accuracy plot, and model architecture visualization. The requirements to run this program is having Python 3.6, TensorFlow and Keras. To install this, Ensure Python 3.6 or higher is installed on your system.Install TensorFlow by running the following command in your terminal or command prompt: pip install tensorflow and to install Keras by running the following command: pip install keras. To use this program, you will need to download the files that are given. Once complete, you will need to navigate to the project directory in your terminal or command prompt. Once you have found it, you can un the following command to start training the model: python cnn_cifar10_baseline.py. The result will be that the model will be trained for 20 epochs, and the accuracy and loss values will be plotted.
Lastly the trained model will be saved as "MyGroup_CIFARmodel.h5" in the project directory.
        The next project is using the trained CIFAR-10 Image Classifier on new images. The classifier has been trained on the CIFAR-10 dataset to recognize 10 different object classes. Some features that is has are that it is trained CNN model for object recognition, it can test the model on images and visualize test images with their predicted labels. It uses the same requirements as before as they both run through Spyder. Installation is exactly the same as before with no changes. To verify that it works, you will need to run the following code that is provided to test the model on images and at the end of the test, the console will display the test images along with their predicted labels.
        The next project is different from the previous two projects, this is like a trivia game or a Big Quiz as it is identified. This trivia game is a simple, interactive quiz game built using Python, Pygame, and Pygame Zero. Players have 10 seconds to answer each question, and the game ends when the player selects an incorrect answer or time runs out. The game keeps track of the player's score, which represents the number of correct answers. A special feature of the game is that when "H" key is pressed, it will display which box the correct answer is in. Another feature, it has a game over screen with the player’s score. The requirements to run is having python version 3.6 or higher and having both Pygame and Pygame Zero installed through pip install pgzero and pip install pygame. To play this game, we will need to be able to use the file that I have provided to run the game and have it load. You can do changes such as add new questions, change the hint key, and have different color backgrounds. 
        In the next project, we are using OpenAI GPT-3 model to generate three alternative names. When a user submits the name of an animal, the app sends a prompt to the GPT-3 model and receives three alternative names for that animal. It is important to import the required libraries such as ‘os’, ‘openai’, and ‘flask’. We will be going to the platform openai website to generate our own personal OpenAI API Keys that will help identify our personal code. To run, we will have to be able follow the openao-quickstart.txt file which gives you the instructions to be able to run the code correctly and effectively. Once you have followed these steps, you will be able to login to your localhost.5000 to be see the webserver where the question will be asked. From there we are able to give it a name and we will receive threedifferent alternatives for names. Things that we can change are the picture of the website, the title of the website, and be able to generate four different names instead of three as the default.


